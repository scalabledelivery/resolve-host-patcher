---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: resolve-host-patcher
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: resolve-host-patcher
  template:
    metadata:
      labels:
        name: resolve-host-patcher
    spec:
      containers: 
      - image: bash
        name: resolve-host-patcher
    
        command:
        - bash
        - -c
        - |
          #!/bin/bash
          set -x -e

          function patch(){
            echo "$(date -u) - Beginning to patch /etc/resolv.conf on the node"

            # Detect systemd-resolved shenanigans and undo it.
            # systemd-resolved wont route to anything internal because
            # someone decided the security was better than flexibility?
            if [ -s /var/run/hostpaths/etc/resolv.conf ]; then
              echo Undoing systemd-resolved shenanigans.
              cat /var/run/hostpaths/etc/resolv.conf > /var/run/hostpaths/etc/resolv.conf.tmp
              unlink /var/run/hostpaths/etc/resolv.conf
              mv /var/run/hostpaths/etc/resolv.conf.tmp /var/run/hostpaths/etc/resolv.conf
            fi

            # Patch the resolve.conf file
            MOD_LINE="# $(date -u) - modified by resolve-host-patcher on boot"
            grep -v 'resolve-host-patcher' /var/run/hostpaths/etc/resolv.conf > /tmp/original-node-resolve.conf
            echo "${MOD_LINE}" > /tmp/kube-resolv.conf
            for ip in $(grep ^nameserver /etc/resolv.conf | awk '{$1=""; print}'); do
              echo "nameserver ${ip} # added by resolve-host-patcher" >> /tmp/kube-resolv.conf
            done
            
            # options can break things, we're just going to disable those
            sed -i -e 's/^options/#options/g' /tmp/original-node-resolve.conf

            # concatenate the files and merge them into a singular resolv.conf
            # the sed plumbing prevents empty lines from growing
            cat /tmp/kube-resolv.conf /tmp/original-node-resolve.conf | sed '/^$/d'  > /var/run/hostpaths/etc/resolv.conf

            cat /var/run/hostpaths/etc/resolv.conf
            ls -lah /var/run/hostpaths/etc/resolv.conf
            cat /var/run/hostpaths/etc/resolv.conf

            echo "$(date -u) - Done patching /etc/resolv.conf"
          }

          while true; do
            patch
            echo "$(date -u) - Sleeping for 30 min"
            sleep 30m
          done

          exit 0 # I would like to exit 0 and only run on boot...
    
        volumeMounts:
        - mountPath: /var/run/hostpaths/etc/
          name: etc
        - mountPath: /var/run/hostpaths/run/
          name: run

      volumes:
      - name: etc
        hostPath:
          path: /etc
      - name: run
        hostPath:
          path: /run
